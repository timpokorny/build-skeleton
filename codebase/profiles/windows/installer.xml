<?xml version="1.0"?>
<!--
             This project is using the Portico Build System
 
      The Portico Build System is designed to support projects that
      must build multiple artefacts or distributions from a single,
      shared codebase. It is designed to be extended and allows all
      logic for a particular artefact or distribution to be located
      together to help make navigation of a large structure as easy
      as possible. For full details, see the online documentation:

             https://github.com/timpokorny/build-skeleton

         File: profiles/windows/installer.xml
      Purpose: Defines tasks to build the Windows installation packages.
-->
<project name="windows.installer">

	<!-- ================================================================================= -->
	<!--                                 General Settings                                  -->
	<!-- ================================================================================= -->
	<description>
		Windows 32/64-bit installer generation.
	</description>

	<!-- NSIS Installer Properties -->
	<property name="nsis.resources.dir"    location="${resources.dir}/installers/windows/nsis"/>

	<!-- ================================================================================= -->
	<!--                           Installer Preparation Targets                           -->
	<!-- ================================================================================= -->
	<!-- Prepare the build directory -->
	<target name="prep">
		<!-- copy the installer resources into the sandbox -->
		<copy todir="${sandbox.dir}">
			<fileset dir="${nsis.resources.dir}" includes="*.url"/> 
		</copy>
	</target>

	<!-- ================================================================================= -->
	<!--                             Installer Creation Targets                            -->
	<!-- ================================================================================= -->
	<extension-point name="installer" extensionOf="master.installer"/>

	<!--                                     -->
	<!-- Windows 32-bit Installer Generation -->
	<!--                                     -->
	<target name="nsis.win32" extensionOf="installer" depends="prep">
		<!-- check to make sure we have a JRE for bundling  -->
		<echo>Validating x86 JRE is available for bundling</echo>
		<available file="${jdk.home.win32}/jre" property="jrefound"/>
		<fail unless="jrefound" message="Could not locate 32-bit JRE. Searched ${jdk.home.win32}."/>

		<!-- run the NSIS script for the installer -->
		<echo>Creating Windows 32-bit Installer</echo>
		<nsis-installer script="${nsis.resources.dir}/installer-win32.nsi">
			<define name="OUTDIR"       value="${dist.dir}"/>      <!-- put the installer here   -->
			<define name="VERSION"      value="${build.version}"/> <!-- e.g. "2.0.0"             -->
			<define name="BUILD_NUMBER" value="${build.number}"/>  <!-- shown in file details    -->
			<define name="LICENSE"      value="${license}"/>       <!-- presented during install -->
			<define name="SANDBOX"      value="${sandbox.dir}"/>   <!-- contents of the app      -->
			<define name="JREPATH"      value="${jdk.home.win32}\jre"/> <!-- jre to bundle  -->
		</nsis-installer>
	</target>

	<!--                                     -->
	<!-- Windows 64-bit Installer Generation -->
	<!--                                     -->
	<target name="nsis.win64" extensionOf="installer" depends="prep">
		<!-- check to make sure we have a JRE for bundling -->
		<echo>Validating amd64 JRE is available for bundling</echo>
		<available file="${jdk.home.win64}/jre" property="jrefound"/>
		<fail unless="jrefound" message="Could not locate 64-bit JRE. Searched ${jdk.home.win64}."/>

		<!-- run the NSIS script for the installer -->
		<echo>Creating Windows 64-bit Installer</echo>
		<nsis-installer script="${nsis.resources.dir}/installer-win64.nsi">
			<define name="OUTDIR"       value="${dist.dir}"/>      <!-- put installer here       -->
			<define name="VERSION"      value="${build.version}"/> <!-- e.g. "2.0.0"             -->
			<define name="BUILD_NUMBER" value="${build.number}"/>  <!-- shown in file details    -->
			<define name="LICENSE"      value="${license}"/>       <!-- presented during install -->
			<define name="SANDBOX"      value="${sandbox.dir}"/>   <!-- contents of the app      -->
			<define name="JREPATH"      value="${jdk.home.win64}\jre"/> <!-- jre to bundle -->
		</nsis-installer>
	</target>

	<!-- ================================================================================= -->
	<!--                             Zip-File Creation Targets                             -->
	<!-- ================================================================================= -->
	<!-- These are only run on command - they're not tied into the broader build system -->
	<!--                                    -->
	<!-- Windows 32-bit Zip FIle Generation -->
	<!--                                    -->
	<target name="zip.win32">
		<!-- check to make sure the jre dir exists -->
		<echo>Validating x86 JRE is available for bundling</echo>
		<available file="${jdk.home.win32}/jre" property="jrefound"/>
		<fail unless="jrefound" message="Could not locate 32-bit JRE. Searched ${jdk.home.win32}"/>

		<!-- generate the tarball with the sandbox and the JRE in it -->
		<zip destfile="${dist.dir}/${dist.name}-win32.zip">
			<zipfileset dir="${sandbox.dir}"
			            includes="**/*"
			            excludes="lib/**/*64*,bin/**/*64*"
			            prefix="${dist.name}"/>
			<zipfileset dir="${jdk.home.win32}/jre"
			            includes="**/*"
			            prefix="${dist.name}/jre"/>
		</zip>
	</target>

	<!--                                    -->
	<!-- Windows 64-bit Zip File Generation -->
	<!--                                    -->
	<target name="zip.win64">
		<!-- check to make sure the jre dir exists -->
		<echo>Validating amd64 JRE is available for bundling</echo>
		<available file="${jdk.home.win64}/jre" property="jrefound"/>
		<fail unless="jrefound" message="Could not locate 64-bit JRE. Searched ${jdk.home.win64}"/>

		<!-- generate the tarball with the sandbox and the JRE in it -->
		<!-- we handle lib/bin separately so we can ensure only 64-bit stuff gets in -->
		<zip destfile="${dist.dir}/${dist.name}-win64.zip">
			<zipfileset dir="${sandbox.dir}"
			            includes="**/*"
			            excludes="lib/**/*,bin/**/*"
			            prefix="${dist.name}"/>
			<zipfileset dir="${sandbox.dir}"
			            includes="lib/*.jar,lib/**/*64*,bin/**/*64*"
			            prefix="${dist.name}"/>
			<zipfileset dir="${jdk.home.win64}/jre"
			            includes="**/*"
			            prefix="${dist.name}/jre"/>
		</zip>
	</target>

</project>

